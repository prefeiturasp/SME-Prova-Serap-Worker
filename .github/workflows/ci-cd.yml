name: Docker Image CI

on:
  push:
    branches: [ development, release ]
    paths-ignore:
    - ".github/workflows/**"    
  
  workflow_dispatch:
  
jobs:

  sonar-dev:
    runs-on: sonar
    if: ${{ github.ref == 'refs/heads/development' }}
    steps:
      - uses: actions/checkout@v2

      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.x'

      - name: Install dependencies
        run: | 
          [ ! -e "/runner/.dotnet/tools/dotnet-sonarscanner" ] && dotnet tool install --global dotnet-sonarscanner
          dotnet restore SME.SERAp.Prova.Worker.sln

      - name: Sonarqube Begin
        run: | 
          export PATH="$PATH:/runner/.dotnet/tools"          
          dotnet sonarscanner begin  /k:sme-prova-serap-worker /d:sonar.login=${{ secrets.SONAR_TOKEN }} /d:sonar.host.url="http://sonar.sme.prefeitura.sp.gov.br/" /d:sonar.cs.opencover.reportsPaths="teste/SME.SERAp.Aplicacao.Test/coverage.opencover.xml,teste/SME.SERAp.Dominio.Test/coverage.opencover.xml" /d:sonar.coverage.exclusions="**Test*.cs"
      - name: Build
        run: dotnet build SME.SERAp.Prova.Worker.sln

      - name: Test with the dotnet CLI
        run: dotnet test SME.SERAp.Prova.Worker.sln /p:CollectCoverage=true /p:CoverletOutputFormat=opencover
        env:
          ASPNETCORE_ENVIRONMENT: Development

      - name: Sonarqube end
        run: | 
          export PATH="$PATH:/runner/.dotnet/tools"  
          dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"          
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}          

  build:

    runs-on: serap    

    steps:
      - uses: actions/checkout@v2
      
      - name: Login to registry
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.REGISTRY_HOST }}
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PWD }}

    
      - name: Build the Docker image    
        run: |  
               docker build . --file src/SME.SERAp.Prova.Worker/Dockerfile --tag ${{ secrets.REGISTRY_HOST }}/${GITHUB_REF##*/}/sme-prova-serap-worker
               docker push ${{ secrets.REGISTRY_HOST }}/${GITHUB_REF##*/}/sme-prova-serap-worker
        
  deploy-development:
    runs-on: serap
    if: ${{ github.ref == 'refs/heads/development' }}        
    environment:
      name: development
    needs: [ build ]
    steps:
      - name: Run an adjust of kubernetes dev
        env: # Ou como uma variÃ¡vel de ambiente
          RANCHER_URL: ${{ secrets.RANCHER_URL }}
          RANCHER_TOKEN: ${{ secrets.RANCHER_TOKEN }}
        run: |
          sed -e "s/\${RANCHER_URL}/$RANCHER_URL/" -e "s/\${RANCHER_TOKEN}/$RANCHER_TOKEN/" /runner/config_template > /runner/.kube/config                
      - 
       name: Change Images
       run: |
         kubectl rollout restart deployment/sme-prova-serap-worker -n sme-serap-estudante           
         rm -f /runner/.kube/config      
  
  deploy-release:
    runs-on: serap
    if: ${{ github.ref == 'refs/heads/release' }}        
    environment:
      name: release
    needs: [ build ]
    steps:
      - name: Run an adjust of kubernetes hom
        env: # Ou como uma variÃ¡vel de ambiente
          RANCHER_URL: ${{ secrets.RANCHER_URL }}
          RANCHER_TOKEN: ${{ secrets.RANCHER_TOKEN }}
        run: |
          sed -e "s/\${RANCHER_URL}/$RANCHER_URL/" -e "s/\${RANCHER_TOKEN}/$RANCHER_TOKEN/" /runner/config_template > /runner/.kube/config                
      - 
       name: Change Images
       run: |
         kubectl rollout restart deployment/sme-prova-serap-worker -n sme-serap-estudante           
         rm -f /runner/.kube/config  
